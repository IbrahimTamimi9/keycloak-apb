- name: Generate Username
  shell: tr -d -c "a-zA-Z" < /dev/urandom | head -c 20
  register: generated_username

- name: Generate Password
  shell: tr -d -c "a-zA-Z0-9" < /dev/urandom | head -c 20
  register: generated_password

- name: "Retrieve route to keycloak"
  shell: "oc get configmaps/{{keycloak_service_name}} -n {{ namespace }} -o jsonpath='{.data.uri}'" ## Unexpected . on template template error while templating string: unexpected '.'
  register: keycloak_route
- debug: msg="kc route = {{keycloak_route.stdout}}"

- name: "Generate keycloak auth token"
  uri:
    url: "{{ keycloak_route.stdout }}/auth/realms/master/protocol/openid-connect/token"
    method: POST
    body: "client_id=admin-cli&username={{ _apb_provision_creds.ADMIN_NAME }}&password={{ _apb_provision_creds.ADMIN_PASSWORD }}&grant_type=password"
    validate_certs: no
  register: keycloak_auth_response
  until: keycloak_auth_response.status == 200
  retries: 600
  delay: 2

# ## Check if specified realm exists. Create if it doesn't exist and skip if it exists
- name: Get realms
  uri: 
    url: "{{ keycloak_route.stdout }}/auth/admin/realms/"
    method: GET
    validate_certs: no
    body_format: json
    headers:
      Authorization: "bearer {{ keycloak_auth_response.json.access_token }}"
    status_code: 200
    return_content: yes
  register: keycloak_realms

- set_fact: kc_json_realms={{keycloak_realms.content | from_json }}

- set_fact: kc_realms={{ kc_json_realms | map(attribute='realm') | list}}

- set_fact: realm={{ namespace }}
  when: REALM_NAME is not defined

- set_fact: realm={{ REALM_NAME }}
  when: REALM_NAME is defined

- name: Generate namespace specific realm
  template:
    src: realm.json.j2
    dest: /tmp/realm.json

- name: "Create {{ realm }} realm"
  uri:
    url: "{{ keycloak_route.stdout }}/auth/admin/realms"
    method: POST
    body: "{{ lookup('file','/tmp/realm.json') }}"
    validate_certs: no
    body_format: json
    headers:
      Authorization: "bearer {{ keycloak_auth_response.json.access_token }}"
    status_code: 201
  when: "realm not in kc_realms"

- name: "Create {{ service }}-bearer client in realm {{ namespace }}"
  uri:
    url: "{{ keycloak_route.stdout }}/auth/admin/realms/{{ namespace }}/clients"
    method: POST
    body: "{\"id\": \"{{ service }}-bearer\", \"secret\": \"{{ generated_password.stdout }}\",\"bearerOnly\":true}"
    validate_certs: no
    body_format: json
    headers:
      Authorization: "bearer {{ keycloak_auth_response.json.access_token }}"
    status_code: 201, 409


- name: Get installation details bearer
  uri:
    url: "{{ keycloak_route.stdout }}/auth/admin/realms/{{ namespace }}/clients/{{ service}}-bearer/installation/providers/keycloak-oidc-keycloak-json"
    method: GET
    validate_certs: no
    headers:
      Authorization: "bearer {{ keycloak_auth_response.json.access_token }}"
    status_code: 200
    return_content: yes
  register: installation_bearer

- name: encode {{ service }} credentials
  asb_encode_binding:
    fields:
      name: "keycloak-bearer"
      resource: "{{ service }}-bearer"
      bearer_installation: "{{ installation_bearer.content }}"
      uri: "{{ keycloak_route.stdout }}"
      client_id: "{{ generated_username.stdout }}"
      client_secret: "{{ generated_password.stdout }}"
